name: Release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        targets:
          [
            {
              name: windows64,
              fancy_name: Windows,
              runner: windows-latest,
              target: x86_64-pc-windows-msvc,
              ffmpeg_url: "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.7z",
              ffprobe_url: "",
            },
            {
              name: macos-intel,
              fancy_name: MacOS-Intel,
              runner: macos-latest,
              target: x86_64-apple-darwin,
              ffmpeg_url: "https://www.osxexperts.net/ffmpeg6intel.zip",
              ffprobe_url: "https://www.osxexperts.net/ffprobe6intel.zip",
            },
            {
              name: macos-arm,
              fancy_name: MacOS-AppleSilicon,
              runner: macos-latest,
              target: aarch64-apple-darwin,
              ffmpeg_url: "https://www.osxexperts.net/ffmpeg6arm.zip",
              ffprobe_url: "https://www.osxexperts.net/ffprobe6arm.zip",
            },
          ]
    runs-on: ${{ matrix.targets.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.targets.target }}

      - name: Cache dependencies
        id: extcache
        uses: Swatinem/rust-cache@v2
        with:
          cache-directories: "${{ github.workspace }}/ext/"

      - name: Install cargo-binstall
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-binstall

      - name: Install cargo-wix
        if: ${{ matrix.targets.name == 'windows64' }}
        run: cargo binstall cargo-wix --no-confirm --force

      - name: Install cargo-bundle
        if: ${{ matrix.targets.name == 'macos-intel' || matrix.targets.name == 'macos-arm'}}
        run: cargo binstall cargo-bundle --no-confirm --force

      - name: Build (Windows)
        if: ${{ matrix.targets.name == 'windows64'}}
        run: cargo build --release --features windows-installer

      - name: Build (MacOS)
        if: ${{ matrix.targets.name == 'macos-intel' || matrix.targets.name == 'macos-arm'}}
        run: cargo build --release --target ${{ matrix.targets.target }} --features macos-app-bundle

      - name: Download ffmpeg (Windows)
        if: ${{ matrix.targets.name == 'windows64' && steps.extcache.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p ${{ github.workspace }}/ext/ffmpeg
          cd ${{ github.workspace }}/ext/ffmpeg
          curl -L ${{ matrix.targets.ffmpeg_url }} -o ffmpeg.7z
          7z e ffmpeg.7z -aoa
        shell: bash

      - name: Download ffmpeg (MacOS)
        if: ${{ (matrix.targets.name == 'macos-intel' || matrix.targets.name == 'macos-arm') && steps.extcache.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p ${{ github.workspace }}/ext/ffmpeg/${{ matrix.targets.name }}
          cd ${{ github.workspace }}/ext/ffmpeg/${{ matrix.targets.name }}
          curl -L ${{ matrix.targets.ffmpeg_url }} -o ffmpeg.zip
          7z e ffmpeg.zip -aoa
          curl -L ${{ matrix.targets.ffprobe_url }} -o ffprobe.zip
          7z e ffprobe.zip -aoa

      - name: Create Windows installer
        if: ${{ matrix.targets.name == 'windows64'}}
        continue-on-error: true
        run: |
          cargo wix --include _deploy\windows\wix\main.wxs --nocapture --no-build
          cd ${{ github.workspace }}/target/wix/
          7z a temp.zip *.msi
          mv temp.zip ${{ github.workspace }}/_deploy/Walksnail-OSD-Tool-${{ matrix.targets.fancy_name }}.zip
        shell: cmd

      - name: Create Mac App bundle
        if: ${{ matrix.targets.name == 'macos-intel' || matrix.targets.name == 'macos-arm'}}
        run: |
          cargo bundle --release --target ${{ matrix.targets.target }} --features macos-app-bundle
          cp ${{ github.workspace }}/ext/ffmpeg/${{ matrix.targets.name }}/ffmpeg ${{ github.workspace }}/target/${{ matrix.targets.target }}/release/bundle/osx/Walksnail\ OSD\ Tool.app/Contents/MacOS/ffmpeg
          cp ${{ github.workspace }}/ext/ffmpeg/${{ matrix.targets.name }}/ffprobe ${{ github.workspace }}/target/${{ matrix.targets.target }}/release/bundle/osx/Walksnail\ OSD\ Tool.app/Contents/MacOS/ffprobe
          cd ${{ github.workspace }}/target/${{ matrix.targets.target }}/release/bundle/osx/
          7z a temp.zip Walksnail\ OSD\ Tool.app
          mv temp.zip ${{ github.workspace }}/_deploy/Walksnail-OSD-Tool-${{ matrix.targets.fancy_name }}.zip

      - name: Save binaries
        uses: actions/upload-artifact@v3
        with:
          name: walksnail-osd-tool-all-platforms
          path: ${{ github.workspace }}/_deploy/*.*

  release:
    name: Create release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: walksnail-osd-tool-all-platforms

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./*
          draft: true
          body: "Full changelog: https://github.com/avsaase/walksnail-osd-tool/blob/master/CHANGELOG.md"
